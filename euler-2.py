##Problem 2
##Each new term in the Fibonacci sequence is generated by adding the previous two terms.
##By starting with 1 and 2, the first 10 terms will be:
##1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
##By considering the terms in the Fibonacci sequence whose values do not exceed four million,
##find the sum of the even-valued terms.

#Create a look-up table for Fibbonacci numbers
#Defines initial terms

fibbo_table = [1,2]

def create_fibbo_table():
    check = 0
    i = 2
    
    while check < 4000000:
        next_fibbo = fibbo_table[i-1] + fibbo_table[i-2]
        fibbo_table.append(next_fibbo)
        check = fibbo_table[i]
        i+=1

#Sums the even-valued Fibbonacci numbers

def add_even_fibbo():
    total_sum = 0
    
    for fibbo_number in fibbo_table:
        if fibbo_number%2 == 0:
            total_sum += fibbo_number
    return total_sum

create_fibbo_table()
print(add_even_fibbo())
    
